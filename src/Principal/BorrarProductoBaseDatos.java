/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class BorrarProductoBaseDatos extends javax.swing.JPanel {

    /**
     * Creates new form BorrarProductoBaseDatos
     */
    public String a[][] = null;
    public BorrarProductoBaseDatos() {
        initComponents();
        a = new String[MenuPrincipal.ProdutosMuestra.size()][2];
        //llenado de la tabla
        for(int i = 0;i<MenuPrincipal.ProdutosMuestra.size();i++){
            a[i][0] = "SISA-" + MenuPrincipal.ProdutosMuestra.get(i).id_productos;
            a[i][1] = MenuPrincipal.ProdutosMuestra.get(i).descripcion;
 
        }
        
        
           TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Descripcion"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
         });
       //formato de las colunas
       TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(650);
       btnBorrar.setEnabled(false);//bloqueamos el boton    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        palabrasLabel = new javax.swing.JTextField();
        btnMostrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaInventario = new javax.swing.JTable();
        btnBorrar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnMenuPrincipal = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(810, 520));
        setMinimumSize(new java.awt.Dimension(810, 520));

        btnMostrar.setText("Buscar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione producto a eliminar");

        jLabel2.setText("Eliminar Producto");

        TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaInventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaInventarioMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaInventarioMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaInventario);

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnMenuPrincipal.setText("MenuPrincipal");
        btnMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuPrincipalActionPerformed(evt);
            }
        });

        jLabel3.setText("Buscar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(btnBorrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMenuPrincipal)
                .addGap(169, 169, 169)
                .addComponent(btnRegresar)
                .addGap(118, 118, 118))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(355, 355, 355))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(palabrasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnMostrar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(palabrasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMostrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBorrar)
                    .addComponent(btnRegresar)
                    .addComponent(btnMenuPrincipal))
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        // TODO add your handling code here:
        
        String palabra = palabrasLabel.getText();
        
        if(!palabra.isEmpty()){
            try {
                List<Productos> listaTemporal = MenuPrincipal.consultas.listaProductos("select * from productos where descripcion ilike '"+ palabra + "%' or descripcion ilike '%" +palabra +"%'" );
                a = new String[listaTemporal.size()][2];
                
                if(a.length == 0){
                    JOptionPane.showMessageDialog(this, "No se encontraron resultado");
                    palabrasLabel.setText("");
                    btnMostrar.doClick();
                    return;
                }
                for(int i = 0; i<a.length;i++){
                    a[i][0] = "SISA-" + listaTemporal.get(i).id_productos;
                    a[i][1] = listaTemporal.get(i).descripcion;
                    
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VerProductos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VerProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
        }else{
            a = new String [MenuPrincipal.ProdutosMuestra.size()][2];//arreglo
         
            
            TablaInventario.setVisible(false);

            //llenado de la tabla
            for(int i = 0;i<MenuPrincipal.ProdutosMuestra.size();i++){
                a[i][0] = "SISA-" + MenuPrincipal.ProdutosMuestra.get(i).id_productos;
                a[i][1] = MenuPrincipal.ProdutosMuestra.get(i).descripcion;
                

            }         
        }
        
        TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
        a,new String [] {
                "ID", "Descripcion"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        //formato de la tabla
        TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(100);
        TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(650);
        btnBorrar.setEnabled(false);//bloqueamos el boton
        TablaInventario.setVisible(true);//damos visibilidad a la tabla
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuPrincipalActionPerformed
        // TODO add your handling code here:
        
        //posicionamiento del primer panel
        MenuInicial mi = new MenuInicial();
        mi.setLocation(140,0);//posicion del panel ajustado al frame
        mi.setSize(960, 720);//tamaño del panel ajustado al frame
        /* Esto ultimo es para colocar el panel dentro del frame y ajustarlo en el centro*/
        MenuPrincipal.panelPrincipal.removeAll();
        MenuPrincipal.panelPrincipal.add(mi);
        MenuPrincipal.panelPrincipal.setLocation(0,0);
        MenuPrincipal.panelPrincipal.setSize(1250, 720);
        MenuPrincipal.panelPrincipal.revalidate();
        MenuPrincipal.panelPrincipal.repaint();

    }//GEN-LAST:event_btnMenuPrincipalActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        
        MenuProductos mp = new MenuProductos();//declaramos el objeto panel MenuProductos
        mp.setLocation(140,0);//posicion del panel ajustado al frame
        mp.setSize(960, 720);//tamaño del panel ajustado al frame
        /* Esto ultimo es para colocar el panel dentro del frame y ajustarlo en el centro*/
        MenuPrincipal.panelPrincipal.removeAll();
        MenuPrincipal.panelPrincipal.add(mp);
        MenuPrincipal.panelPrincipal.setLocation(0,0);
        MenuPrincipal.panelPrincipal.setSize(1250, 720);
        MenuPrincipal.panelPrincipal.revalidate();
        MenuPrincipal.panelPrincipal.repaint();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void TablaInventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaInventarioMouseClicked
        // TODO add your handling code here:
        if(TablaInventario.getSelectedRow() > 0 || TablaInventario.getSelectedRows().length>0 ){ //para desbloquear el boton cuando hay algo seleccionado
            btnBorrar.setEnabled(true);
        }
        
    }//GEN-LAST:event_TablaInventarioMouseClicked

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        int[] seleccionados = TablaInventario.getSelectedRows(); //obtenemos las posiciones de los productos selccionados
        
        if(seleccionados.length > 0){
            for(int i = 0; i<seleccionados.length;i++){//recorremos los productos seleccionados
                int b = -Integer.parseInt(a[seleccionados[i]][0].replaceAll("[a-zA-Z]", ""));//obtenemos el id respectivo elegido
                try { 
                    MenuPrincipal.consultas.cambiosProducto("DELETE FROM productos WHERE id_producto = " + String.valueOf(b)); // hacemos la consulta
                   
                    //buscamos en la lista el producto para borrarlo y despues actualizar la tabla
                    for(int j = 0; j<MenuPrincipal.ProdutosMuestra.size();j++){
                        if( b == MenuPrincipal.ProdutosMuestra.get(j).id_productos){//buscamos el producto que tenga el mismo id del seleccionado
                            MenuPrincipal.ProdutosMuestra.remove(j);//removemos de la lista el producto 
                        }
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(BorrarProductoBaseDatos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(BorrarProductoBaseDatos.class.getName()).log(Level.SEVERE, null, ex);
                }        
            }
        }
        
        //actualizamos la tabla del frame
        TablaInventario.setVisible(false);
        a = new String[MenuPrincipal.ProdutosMuestra.size()][2]; //actualizamos el arreglo al tamaño nuevo de los productos de la lista
        //llenado de la tabla
        for(int i = 0;i<MenuPrincipal.ProdutosMuestra.size();i++){
            a[i][0] = "SISA-" + MenuPrincipal.ProdutosMuestra.get(i).id_productos;
            a[i][1] = MenuPrincipal.ProdutosMuestra.get(i).descripcion;
 
        }
        
        //damos el foramto en la tabla
        TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Descripcion"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
         });

       //formato de la tabla
       TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(650);
        
        TablaInventario.setVisible(true);
        
        
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void TablaInventarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaInventarioMousePressed
        // TODO add your handling code here:
        if(TablaInventario.getSelectedRow() > 0 || TablaInventario.getSelectedRows().length>0 ){
            btnBorrar.setEnabled(true);
        }
    }//GEN-LAST:event_TablaInventarioMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaInventario;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnMenuPrincipal;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField palabrasLabel;
    // End of variables declaration//GEN-END:variables
}
