/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import static Principal.MenuPrincipal.panelPrincipal;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class VerClientes extends javax.swing.JPanel {

    /**
     * Creates new form VerClientes
     */
    
    
    
    
    
    public String a[][] = null;
    public boolean eliminar = false;
    
    
    public VerClientes(boolean el){
        this.eliminar = true;
        initComponents();
        btnEditarCliente.setVisible(false);
        btnEliminar.setEnabled(false);
        a = new String[MenuPrincipal.ClientesMuestra.size()][6];
         
        //llenado de la tabla
        for(int i = 0;i<MenuPrincipal.ClientesMuestra.size();i++){
            
            a[i][0] = "Cliente-" + MenuPrincipal.ClientesMuestra.get(i).id_cliente;
            a[i][1] = MenuPrincipal.ClientesMuestra.get(i).nombre;
            a[i][2] = MenuPrincipal.ClientesMuestra.get(i).correo;
            a[i][3] = MenuPrincipal.ClientesMuestra.get(i).empresa;
            a[i][4] = MenuPrincipal.ClientesMuestra.get(i).telefono;
            a[i][5] = MenuPrincipal.ClientesMuestra.get(i).rfc;
 
        }
        
        
           TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Nombre","Email", "Empresa","telefono","RFC"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
         });
       
       TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(80);
       TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(250);
       TablaInventario.getColumnModel().getColumn(2).setPreferredWidth(250);
       TablaInventario.getColumnModel().getColumn(3).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(4).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(5).setPreferredWidth(100);
    }
    
    
    public VerClientes() {
        initComponents();
        textoEliminar.setVisible(false);
        btnEditarCliente.setEnabled(false);
        btnEliminar.setEnabled(false);
        
        a = new String[MenuPrincipal.ClientesMuestra.size()][6];
         
        //llenado de la tabla
        for(int i = 0;i<MenuPrincipal.ClientesMuestra.size();i++){
            
            a[i][0] = "Cliente-" + MenuPrincipal.ClientesMuestra.get(i).id_cliente;
            a[i][1] = MenuPrincipal.ClientesMuestra.get(i).nombre;
            a[i][2] = MenuPrincipal.ClientesMuestra.get(i).correo;
            a[i][3] = MenuPrincipal.ClientesMuestra.get(i).empresa;
            a[i][4] = MenuPrincipal.ClientesMuestra.get(i).telefono;
            a[i][5] = MenuPrincipal.ClientesMuestra.get(i).rfc;
 
        }
        
        
           TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Nombre","Email", "Empresa","telefono","RFC"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
         });
       
       TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(80);
       TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(250);
       TablaInventario.getColumnModel().getColumn(2).setPreferredWidth(250);
       TablaInventario.getColumnModel().getColumn(3).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(4).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(5).setPreferredWidth(100);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        EmpresaLabel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnBuscarEmpresa = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nombreLabel = new javax.swing.JTextField();
        btnBuscarNombre = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaInventario = new javax.swing.JTable();
        btnEditarCliente = new javax.swing.JButton();
        btnMenuPrincipal = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        textoEliminar = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1250, 720));
        setMinimumSize(new java.awt.Dimension(1250, 720));
        setPreferredSize(new java.awt.Dimension(1250, 720));

        jLabel1.setText("Clientes");

        jLabel2.setText("Por Empresa");

        btnBuscarEmpresa.setText("Buscar");
        btnBuscarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEmpresaActionPerformed(evt);
            }
        });

        jLabel3.setText("Por Nombre");

        btnBuscarNombre.setText("Buscar");
        btnBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNombreActionPerformed(evt);
            }
        });

        TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaInventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaInventarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaInventario);

        btnEditarCliente.setText("Editar Cliente");
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnMenuPrincipal.setText("Menu Principal");
        btnMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuPrincipalActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        textoEliminar.setText("Seleccione un cliente a eliminar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(620, 620, 620)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(btnRegresar)
                        .addGap(40, 40, 40)
                        .addComponent(btnMenuPrincipal)
                        .addGap(232, 232, 232)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(btnEditarCliente)
                        .addGap(67, 67, 67)
                        .addComponent(btnLimpiar)))
                .addContainerGap(219, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textoEliminar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(41, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EmpresaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarEmpresa)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarNombre))
                            .addComponent(jLabel3))
                        .addGap(74, 74, 74))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmpresaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarEmpresa)
                    .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textoEliminar)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarCliente)
                    .addComponent(btnMenuPrincipal)
                    .addComponent(btnRegresar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnEliminar))
                .addGap(65, 65, 65))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEmpresaActionPerformed
        // TODO add your handling code here:
        String palabra = EmpresaLabel.getText();
        
        
        if(!palabra.isEmpty()){
            try {
                List<Cliente> listaTemporal = null;
                
                if( palabra.equals("Null")){
                    palabra = "";
                    listaTemporal = MenuPrincipal.consultas.listaCliente("SELECT *\n" +"FROM clientes\n" +"where empresa = '';" );
                }else{
                    listaTemporal = MenuPrincipal.consultas.listaCliente("select * from clientes where empresa ilike '"+ palabra + "%' or empresa ilike '%" +palabra +"%'" );
                }
                
                
                
                a = new String[listaTemporal.size()][4];
                
                if(a.length == 0){
                    JOptionPane.showMessageDialog(this, "No se encontraron resultado");
                    EmpresaLabel.setText("");
                    btnBuscarEmpresa.doClick();
                    return;
                }
                for(int i = 0; i<listaTemporal.size();i++){
                    a[i][0] = "Cliente-" + listaTemporal.get(i).id_cliente;
                    a[i][1] = listaTemporal.get(i).nombre;
                    a[i][2] = listaTemporal.get(i).empresa;
                    a[i][3] = listaTemporal.get(i).puesto;
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VerProductos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VerProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
        }else{
            a = new String [MenuPrincipal.ClientesMuestra.size()][4];//arreglo
         
            
            TablaInventario.setVisible(false);

            //llenado de la tabla
            for(int i = 0;i<MenuPrincipal.ClientesMuestra.size();i++){
                a[i][0] = "Cliente-" + MenuPrincipal.ClientesMuestra.get(i).id_cliente;
                a[i][1] = MenuPrincipal.ClientesMuestra.get(i).nombre;
                a[i][2] = MenuPrincipal.ClientesMuestra.get(i).empresa;
                a[i][3] = MenuPrincipal.ClientesMuestra.get(i).puesto;

            }         
        }
        
         TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Nombre", "Empresa","Puesto"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
         });
        
        btnEditarCliente.setEnabled(false);
        TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(100);
       TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(550);
       TablaInventario.getColumnModel().getColumn(2).setPreferredWidth(150);
       TablaInventario.getColumnModel().getColumn(3).setPreferredWidth(150);
        TablaInventario.setVisible(true);
    }//GEN-LAST:event_btnBuscarEmpresaActionPerformed

    private void btnMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuPrincipalActionPerformed
        // TODO add your handling code here:
        
        MenuInicial mi = new MenuInicial();//declaramos el objeto Menuinicial
         mi.setLocation(145,0);//posicion del panel ajustado al frame
        mi.setSize(960, 720);//tamaño del panel ajustado al frame
        /* Esto ultimo es para colocar el panel dentro del frame y ajustarlo en el centro*/
        panelPrincipal.removeAll();
        panelPrincipal.add(mi);
        panelPrincipal.setLocation(0,0);
        panelPrincipal.setSize(1250, 720);
        panelPrincipal.revalidate();
        panelPrincipal.repaint();
    }//GEN-LAST:event_btnMenuPrincipalActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        MenuClientes mp = new MenuClientes();//declaramos el objeto panel MenuProductos
        mp.setLocation(290,0);//posicion del panel ajustado al frame
        mp.setSize(960, 720);//tamaño del panel ajustado al frame
        /* Esto ultimo es para colocar el panel dentro del frame y ajustarlo en el centro*/
        panelPrincipal.removeAll();
        panelPrincipal.add(mp);
        panelPrincipal.setLocation(0,0);
        panelPrincipal.setSize(1250, 720);
        panelPrincipal.revalidate();
        panelPrincipal.repaint();  
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        // TODO add your handling code here:
        if(TablaInventario.getSelectedRow() >= 0){
            if(TablaInventario.getSelectedRows().length == 1){
                String b = a[TablaInventario.getSelectedRow()][0].replaceAll("[a-zA-Z]", "");
                EditarCliente mp = null; 
                try {
                    
                    mp = new EditarCliente(-Integer.parseInt(b));
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(VerClientes.class.getName()).log(Level.SEVERE, null, ex);
                }
                mp.setLocation(185,25);//posicion del panel ajustado al frame
                mp.setSize(879, 670);//tamaño del panel ajustado al frame
                /* Esto ultimo es para colocar el panel dentro del frame y ajustarlo en el centro*/
                panelPrincipal.removeAll();
                panelPrincipal.add(mp);
                panelPrincipal.setLocation(0,0);
                panelPrincipal.setSize(1250, 720);
                panelPrincipal.revalidate();
                panelPrincipal.repaint(); 
            }else{
                JOptionPane.showMessageDialog(this,
                "Seleccione solo un cliente.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            }
        }
         
        
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void TablaInventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaInventarioMouseClicked
        // TODO add your handling code here:
        if(TablaInventario.getSelectedRow() >= 0){
            
            if(!this.eliminar){
                 btnEditarCliente.setEnabled(true);
            }
           
            
            
            btnEliminar.setEnabled(true);
        }
    }//GEN-LAST:event_TablaInventarioMouseClicked

    private void btnBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNombreActionPerformed
        // TODO add your handling code here:
        String palabra = nombreLabel.getText();
        
        
        if(!palabra.isEmpty()){
            try {
                List<Cliente> listaTemporal = null;
                
                if( palabra.equals("Null")){
                    palabra = "";
                    listaTemporal = MenuPrincipal.consultas.listaCliente("SELECT *\n" +"FROM clientes\n" +"where nombre = '';" );
                }else{
                    listaTemporal = MenuPrincipal.consultas.listaCliente("select * from clientes where nombre ilike '"+ palabra + "%' or empresa ilike '%" +palabra +"%'" );
                }
                
                
                
                a = new String[listaTemporal.size()][4];
                
                if(a.length == 0){
                    JOptionPane.showMessageDialog(this, "No se encontraron resultado");
                    nombreLabel.setText("");
                    btnBuscarNombre.doClick();
                    return;
                }
                for(int i = 0; i<listaTemporal.size();i++){
                    a[i][0] = "Cliente-" + listaTemporal.get(i).id_cliente;
                    a[i][1] = listaTemporal.get(i).nombre;
                    a[i][2] = listaTemporal.get(i).empresa;
                    a[i][3] = listaTemporal.get(i).puesto;
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VerProductos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VerProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
        }else{
            a = new String [MenuPrincipal.ClientesMuestra.size()][4];//arreglo
         
            
            TablaInventario.setVisible(false);

            //llenado de la tabla
            for(int i = 0;i<MenuPrincipal.ClientesMuestra.size();i++){
                a[i][0] = "Cliente-" + MenuPrincipal.ClientesMuestra.get(i).id_cliente;
                a[i][1] = MenuPrincipal.ClientesMuestra.get(i).nombre;
                a[i][2] = MenuPrincipal.ClientesMuestra.get(i).empresa;
                a[i][3] = MenuPrincipal.ClientesMuestra.get(i).puesto;

            }         
        }
        
         TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Nombre", "Empresa","Puesto"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
         });
        
        btnEditarCliente.setEnabled(false);
        TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(100);
        TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(550);
        TablaInventario.getColumnModel().getColumn(2).setPreferredWidth(150);
        TablaInventario.getColumnModel().getColumn(3).setPreferredWidth(150);
        TablaInventario.setVisible(true);
        
    }//GEN-LAST:event_btnBuscarNombreActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
                    
            a = new String [MenuPrincipal.ClientesMuestra.size()][4];//arreglo
         
            
            TablaInventario.setVisible(false);

            //llenado de la tabla
            for(int i = 0;i<MenuPrincipal.ClientesMuestra.size();i++){
                a[i][0] = "Cliente-" + MenuPrincipal.ClientesMuestra.get(i).id_cliente;
                a[i][1] = MenuPrincipal.ClientesMuestra.get(i).nombre;
                a[i][2] = MenuPrincipal.ClientesMuestra.get(i).empresa;
                a[i][3] = MenuPrincipal.ClientesMuestra.get(i).puesto;

            }  
            TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            a,
            new String [] {
                "ID", "Nombre", "Empresa","Puesto"
            }
            ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
             });
        
            btnEditarCliente.setEnabled(false);
            TablaInventario.getColumnModel().getColumn(0).setPreferredWidth(100);
            TablaInventario.getColumnModel().getColumn(1).setPreferredWidth(550);
            TablaInventario.getColumnModel().getColumn(2).setPreferredWidth(150);
            TablaInventario.getColumnModel().getColumn(3).setPreferredWidth(150);
            TablaInventario.setVisible(true);

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        int result = JOptionPane.showConfirmDialog(null, "Si elimina al cliente, se eliminaran todas las cotizaciones relacionadas con el","alert", JOptionPane.OK_CANCEL_OPTION);
        
        if(result == JOptionPane.YES_OPTION){
            if(TablaInventario.getSelectedRow() >= 0){
               if(TablaInventario.getSelectedRows().length == 1){
                   String b = a[TablaInventario.getSelectedRow()][0].replaceAll("[a-zA-Z]", "");


                   int id_cliente_eliminar = -Integer.parseInt(b);
                   Cliente cliente_eliminar = null;
                   for(int i=0; i<MenuPrincipal.ClientesMuestra.size();i++){

                       if(MenuPrincipal.ClientesMuestra.get(i).id_cliente==id_cliente_eliminar){
                           cliente_eliminar=MenuPrincipal.ClientesMuestra.get(i);
                           break;
                       }
                   }



                   try {
                       cliente_eliminar.eliminarCliente();
                       MenuPrincipal.consultas.CargaClientes();
                   } catch (ClassNotFoundException ex) {
                       Logger.getLogger(VerClientes.class.getName()).log(Level.SEVERE, null, ex);
                   } catch (SQLException ex) {
                       Logger.getLogger(VerClientes.class.getName()).log(Level.SEVERE, null, ex);
                   }



                   VerClientes mi = null;
                   if(!this.eliminar){
                       mi = new VerClientes();
                   }else{
                       mi = new VerClientes(true);
                   }

                   mi.setLocation(0,0);//posicion del panel ajustado al frame
                   mi.setSize(1250, 720);//tamaño del panel ajustado al frame
                   /* Esto ultimo es para colocar el panel dentro del frame y ajustarlo en el centro*/
                   panelPrincipal.removeAll();
                   panelPrincipal.add(mi);
                   panelPrincipal.setLocation(0,0);
                   panelPrincipal.setSize(1250, 720);
                   panelPrincipal.revalidate();
                   panelPrincipal.repaint(); 
               }else{
                   JOptionPane.showMessageDialog(this,
                   "Seleccione solo un cliente.",
                   "Error",
                   JOptionPane.ERROR_MESSAGE);
               }
           }
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EmpresaLabel;
    private javax.swing.JTable TablaInventario;
    private javax.swing.JButton btnBuscarEmpresa;
    private javax.swing.JButton btnBuscarNombre;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMenuPrincipal;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreLabel;
    private javax.swing.JLabel textoEliminar;
    // End of variables declaration//GEN-END:variables
}
